#ifndef CAR_BUILDER_H
#define CAR_BUILDER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef CAR_READER_H
#include "Car_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif

static const flatbuffers_voffset_t __Test_Car_required[] = { 0 };
typedef flatbuffers_ref_t Test_Car_ref_t;
static Test_Car_ref_t Test_Car_clone(flatbuffers_builder_t *B, Test_Car_table_t t);
__flatbuffers_build_table(flatbuffers_, Test_Car, 3)

#define __Test_Car_formal_args , flatbuffers_string_ref_t v0, flatbuffers_string_ref_t v1, int32_t v2
#define __Test_Car_call_args , v0, v1, v2
static inline Test_Car_ref_t Test_Car_create(flatbuffers_builder_t *B __Test_Car_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, Test_Car, Test_Car_identifier, Test_Car_type_identifier)

__flatbuffers_build_string_field(0, flatbuffers_, Test_Car_name, Test_Car)
__flatbuffers_build_string_field(1, flatbuffers_, Test_Car_model, Test_Car)
__flatbuffers_build_scalar_field(2, flatbuffers_, Test_Car_year, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), Test_Car)

static inline Test_Car_ref_t Test_Car_create(flatbuffers_builder_t *B __Test_Car_formal_args)
{
    if (Test_Car_start(B)
        || Test_Car_name_add(B, v0)
        || Test_Car_model_add(B, v1)
        || Test_Car_year_add(B, v2)) {
        return 0;
    }
    return Test_Car_end(B);
}

static Test_Car_ref_t Test_Car_clone(flatbuffers_builder_t *B, Test_Car_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (Test_Car_start(B)
        || Test_Car_name_pick(B, t)
        || Test_Car_model_pick(B, t)
        || Test_Car_year_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, Test_Car_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* CAR_BUILDER_H */
